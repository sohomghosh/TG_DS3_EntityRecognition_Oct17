TRAIN
id,StringToExtract,description
3,ddlsql144,fotrscomi.srsrelvqe.2008.agentjob.jobduration na fotrscomi.srsrelvqe.2008.agentjob:ddlsql144.internal.ecnahcdroffilc.net;mssrsrelvqe;srsrelvqeagent;{d96c51f7-0e2b-4e9d-9e29-853f29d99598} ddlsql144.internal.ecnahcdroffilc.net;mssrsrelvqe;srsrelvqeagent true 255 1 1 inc0419975 na performancecollection uk\929666 03-04-2017 08:09 03-05-2017 00:09 57600 ddldonmocs


TEST
id,description
1,request 1 - http://frapub2.intranet.ecnahcdroffilc.com this alert was generated by the aggregate monitor. please open the teahhl explorer to identify the monitors which contributed to this alert. epaonliwpbtcia_85c7cc1ad2284cce82aabb54f15403e0:ddl-mocsms-01.internal.ecnahcdroffilc.net ddl-mocsms-01.internal.ecnahcdroffilc.net true 255 2 1 na na performanceteahhl system 03-03-2017 09:57 03-03-2017 10:01 271 ddldonmocs


SAMPLE SUBMISSION
id,StringToExtract
1,value


################################# SOLUTION #################################
/done/ 0) Tokenize: whitespace, colon(:), comma
/tried this too basic/ 1) If any of the StringToExtract in train set occurs in a sentence then it assign it; If two or more occurs then use the one which is more frequent in train set
/tried this/ 2) Observe pattern in StringToExtract use regular expression to extract them; See Subh Notes
	i) words starts with ddl, hkg etc. see <Words start with>
	ii) three letters followed by - or _ 
	iii) three letters followed by - followed by three letters followed by - followed by number
	iv)
3) Use word2vec with proper tokenization. For each word find the position in vector space. For each word of each sentence in the test set find its distance from labels mentioned in the training set list (or centroid of all labels mentioned in the training set). The word nearest to this centroid is the word to be detected.
4) Other Features: Position of the word from starting, end of a sentence
5) If any of sentence is same as that of the train_set then use it as it is
6) Make a list of words before and after the "StringToExtract" within a fixed window size
7) Number of times any of the "StringToExtract" of training set is occuring in the sentence of the test set
8) use fasttext classifier; tags "StringToExtract" preceed by __label__
<done tfidf and xgboost> 9) Label: Make numeric classes 0 t0 n: Encode StringToExtract; Features by tfidf, fasttext, word2vec from text "description"; Use catboost, xgboost, lightgbm, ftrl, vopal wabbit etc. for classification
10) Also think about entity recognition from unstructured text : Read papers
11) 




################################# OBSERVATIONS ##############################
Words start with:
{'dir', 'kno', 'onl', 'wcm', 'pdu', '10.', 'cn-', 'sfr', 'pbu', 'cas', 'hdr', 'phk', 'mil', 'bei', 'pbr', 'muc', 'us-', 'ccs', 'lux', 'lch', 'pro', 'pca', 'err', 'lpp', 'con', 'ppr', 'lpa', 'plu', 'esa', 'tim', 'dis', 'asi', 'dc=', 'par', 'buc', 'lpg', 'dea', 'pps', 'syd', 'pvs', 'ams', 'bkk', 'bar', 'pny', 'ser', 'sgd', 'sin', 'aud', 'au-', 'dus', 'lub', 'pra', 'doc', 'del', 'jp-', 'seo', 'tok', 'ldt', 'atl', 'spr', 'ame', 'lpm', 'psh', 'pse', 'ce_', 'esd', 'rom', 'psy', 'ind', 'int', 'doh', 'lpd', 'cck', 'eur', 'esc', 'com', 'ddl', 'hyp', 'ist', 'blr', 'web', 'fra', 'mad', 'pty', '6.1', 'nje', 'lsl', 'aut', 'wil', 'eve', 'ppa', 'pbl', 'ban', 'riy', 'war', 'alu', 'sap', 'pbc', 'was', 'gpm', 'lpl', 'nyc', 'pfr', 'per', 'hkg', 'mos', 'dub', 'ldv', 'shn', 'epi', 'pbk', 'lpi', 'pmu', 'bru', 'lst', 'grd', 'pdx'}

All labels: See all_labels.txt
